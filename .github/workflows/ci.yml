name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-matrix:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache target
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-

      - name: Setup Rust (stable)
        run: |
          rustup toolchain install stable
          rustup default stable

      - name: Build plugin crates for tests
        run: |
          # Build the plugin crates so their cdylib artifacts exist under target/debug
          # Tests in plugin-host load the shared libraries directly from plugins/*/target/debug
          cargo build -p plugin-a -p plugin-b -p plugin-multi --locked

      - name: Run workspace tests
        run: |
          cargo test --all --workspace --locked

      - name: Run plugin-interface tests with watch feature
        run: |
          cargo test -p plugin-interface --features watch --locked

      - name: Build plugin artifacts (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          bash ./scripts/build_plugins.sh

      - name: Build plugin artifacts (Windows)
        if: runner.os == 'Windows'
        run: |
          pwsh -NoProfile -NonInteractive -Command "& './scripts/build_plugins.ps1' -buildProfile 'debug'"

      - name: Upload plugin artifacts
        uses: actions/upload-artifact@v4
        with:
          name: plugin-artifacts-${{ matrix.os }}
          path: plugin-host/plugins_out/**
          retention-days: 7

  clippy:
    needs: test-matrix
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        toolchain: [stable, nightly]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache cargo registry and target (clippy)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: clippy-${{ matrix.os }}-${{ matrix.toolchain }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            clippy-${{ matrix.os }}-${{ matrix.toolchain }}-

      - name: Install Rust toolchain
        run: |
          rustup toolchain install ${{ matrix.toolchain }}
          rustup component add clippy --toolchain ${{ matrix.toolchain }}

      - name: Run cargo clippy
        run: |
          cargo +${{ matrix.toolchain }} clippy --all-targets --all-features -- -D warnings
