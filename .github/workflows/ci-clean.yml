name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-matrix:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Cache cargo registry and target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Setup Rust
        run: |
          rustup toolchain install stable
          rustup default stable

      - name: Run cargo test (workspace)
        run: |
          cargo test --all --workspace --locked

      - name: Run plugin-interface tests with watch feature
        run: |
          cargo test -p plugin-interface --features watch --locked

      - name: Build plugin artifacts (non-Windows)
        if: runner.os != 'Windows'
        run: |
          bash ./scripts/build_plugins.sh

      - name: Build plugin artifacts (Windows)
        if: runner.os == 'Windows'
        run: |
          pwsh -NoProfile -NonInteractive -Command "& './scripts/build_plugins.ps1' -buildProfile 'debug'"

      - name: Upload plugin artifacts
        uses: actions/upload-artifact@v4
        with:
          name: plugin-artifacts-${{ matrix.os }}
          path: plugin-host/plugins_out/**

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache cargo registry and target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: clippy-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            clippy-

      - name: Setup Rust
        run: |
          rustup toolchain install stable
          rustup default stable
          rustup component add clippy

      - name: Run cargo clippy
        run: |
          cargo clippy --all-targets --all-features -- -D warnings
